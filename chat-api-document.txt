===== CHAT API SPEC =====

1. REST API Chat (/v1/chats)
   (tất cả đều cần header Authorization: Bearer <token>)

   1.1 Tạo cuộc trò chuyện mới
       Method: POST
       URL:    /v1/chats
       Body:   
         { "participants": ["<userId2>", "<userId3>", …] }
       Response 201: object chat
       Lỗi: 400 / 500

   1.2 Lấy danh sách chat của user
       Method: GET
       URL:    /v1/chats
       Response 200: [
         {
           "_id": "...",
           "participants": [...],
           "lastMessage": {...},
           "createdAt": "...",
           "updatedAt": "..."
         },
         …
       ]

   1.3 Lấy tin nhắn trong chat (có phân trang)
       Method: GET
       URL:    /v1/chats/:chatId/messages
       Query:
         page (int, default=1)
         limit (int, default=20)
       Response 200:
         {
           "messages": [
             {
               "_id": "...",
               "sender": { "name": "...", "email": "..." },
               "text": "...",
               "readBy": [...],
               "createdAt": "..."
             },
             …
           ],
           "currentPage": 1,
           "totalPages": 10,
           "totalMessages": 100
         }

2. SOCKET.IO EVENTS
   Kết nối Socket.IO đến cùng host (vd http://localhost:3000) với:
     const socket = io('http://localhost:3000', {
       auth: { token }
     });

   2.1 joinChat
       Gửi: chatId (string)
       Mục đích: join room

   2.2 leaveChat
       Gửi: chatId

   2.3 sendMessage
       Gửi: { chatId: string, text: string }
       Server sẽ lưu message và emit lại cho cả room

   2.4 Events nhận từ server:
       • message
         Payload: message object (đã populate sender)
       • typing
         Payload: { user: userId, name: userName }
       • stopTyping
         Payload: { user: userId }
       • error
         Payload: { message: string }

3. FLOW TÍCH HỢP FRONT-END
   1. Đăng nhập qua API → lấy accessToken
   2. Connect socket với token
   3. Dùng REST để tạo chat / fetch list / fetch history
   4. Dùng socket.emit(‘joinChat’, chatId)
      socket.emit(‘sendMessage’, { chatId, text })
   5. Lắng nghe socket.on('message' / 'typing' / 'stopTyping')